-- MySQL Script generated by MySQL Workbench
-- Tue Jan 18 14:45:55 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema Youtube
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Youtube` ;

-- -----------------------------------------------------
-- Schema Youtube
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Youtube` ;
USE `Youtube` ;

-- -----------------------------------------------------
-- Table `Youtube`.`Usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Youtube`.`Usuario` ;

CREATE TABLE IF NOT EXISTS `Youtube`.`Usuario` (
  `idUsuario` INT NOT NULL AUTO_INCREMENT,
  `emil` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  `nombre usuario` VARCHAR(45) NULL,
  `fecha nacimiento` DATE NULL,
  `sexo` VARCHAR(45) NULL,
  `pais` VARCHAR(45) NULL,
  `codigo postal` INT NULL,
  PRIMARY KEY (`idUsuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`Etiqueta`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Youtube`.`Etiqueta` ;

CREATE TABLE IF NOT EXISTS `Youtube`.`Etiqueta` (
  `idEtiqueta` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  PRIMARY KEY (`idEtiqueta`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`Video`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Youtube`.`Video` ;

CREATE TABLE IF NOT EXISTS `Youtube`.`Video` (
  `idVideo` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(45) NULL,
  `descripcion` VARCHAR(45) NULL,
  `tama√±o` INT NULL,
  `nombre archivo` VARCHAR(45) NULL,
  `duracion` INT NULL,
  `thumbnail` BLOB NULL,
  `numero reproducciones` INT NULL,
  `numero de likes` INT NULL,
  `numero de dislikes` INT NULL,
  `Usuario_idUsuario` INT NOT NULL,
  `Etiqueta_idEtiqueta` INT NOT NULL,
  `Estado` VARCHAR(45) NULL,
  PRIMARY KEY (`idVideo`),
  INDEX `fk_Video_Usuario1_idx` (`Usuario_idUsuario` ASC) VISIBLE,
  INDEX `fk_Video_Etiqueta1_idx` (`Etiqueta_idEtiqueta` ASC) VISIBLE,
  CONSTRAINT `fk_Video_Usuario1`
    FOREIGN KEY (`Usuario_idUsuario`)
    REFERENCES `Youtube`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Video_Etiqueta1`
    FOREIGN KEY (`Etiqueta_idEtiqueta`)
    REFERENCES `Youtube`.`Etiqueta` (`idEtiqueta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`Canal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Youtube`.`Canal` ;

CREATE TABLE IF NOT EXISTS `Youtube`.`Canal` (
  `idCanal` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `descripcion` VARCHAR(45) NULL,
  `fecha creacion` DATE NULL,
  `Usuario_idUsuario` INT NOT NULL,
  PRIMARY KEY (`idCanal`, `Usuario_idUsuario`),
  INDEX `fk_Canal_Usuario1_idx` (`Usuario_idUsuario` ASC) VISIBLE,
  CONSTRAINT `fk_Canal_Usuario1`
    FOREIGN KEY (`Usuario_idUsuario`)
    REFERENCES `Youtube`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`Publicacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Youtube`.`Publicacion` ;

CREATE TABLE IF NOT EXISTS `Youtube`.`Publicacion` (
  `usuario` INT NOT NULL,
  `fecha/hora publicacion` DATE NULL,
  `Usuario_idUsuario` INT NOT NULL,
  `Video_idVideo` INT NOT NULL,
  PRIMARY KEY (`usuario`),
  INDEX `fk_Publicacion_Usuario1_idx` (`Usuario_idUsuario` ASC) VISIBLE,
  INDEX `fk_Publicacion_Video1_idx` (`Video_idVideo` ASC) VISIBLE,
  CONSTRAINT `fk_Publicacion_Usuario1`
    FOREIGN KEY (`Usuario_idUsuario`)
    REFERENCES `Youtube`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Publicacion_Video1`
    FOREIGN KEY (`Video_idVideo`)
    REFERENCES `Youtube`.`Video` (`idVideo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`PlayList`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Youtube`.`PlayList` ;

CREATE TABLE IF NOT EXISTS `Youtube`.`PlayList` (
  `idPlayList` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `fecha creacion` DATE NULL,
  `estado` VARCHAR(45) NULL,
  `Usuario_idUsuario` INT NOT NULL,
  PRIMARY KEY (`idPlayList`),
  INDEX `fk_PlayList_Usuario1_idx` (`Usuario_idUsuario` ASC) VISIBLE,
  CONSTRAINT `fk_PlayList_Usuario1`
    FOREIGN KEY (`Usuario_idUsuario`)
    REFERENCES `Youtube`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`registro comentarios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Youtube`.`registro comentarios` ;

CREATE TABLE IF NOT EXISTS `Youtube`.`registro comentarios` (
  `id_comentario` INT NOT NULL AUTO_INCREMENT,
  `id_usuario` INT NOT NULL,
  `id_video` INT NOT NULL,
  `texto` VARCHAR(45) NULL,
  `regifecha/hora` DATE NULL,
  `like comentario` VARCHAR(45) NULL,
  INDEX `fk_Usuario_has_Video_Video1_idx` (`id_usuario` ASC) VISIBLE,
  INDEX `fk_Usuario_has_Video_Usuario1_idx` (`id_video` ASC) VISIBLE,
  CONSTRAINT `fk_Usuario_has_Video_Usuario1`
    FOREIGN KEY (`id_video`)
    REFERENCES `Youtube`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Usuario_has_Video_Video1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `Youtube`.`Video` (`idVideo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`registro likes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Youtube`.`registro likes` ;

CREATE TABLE IF NOT EXISTS `Youtube`.`registro likes` (
  `id_video` INT NOT NULL,
  `id_usuario` INT NOT NULL,
  `hora/fecha` DATE NULL,
  PRIMARY KEY (`id_video`, `id_usuario`),
  INDEX `fk_Usuario_has_Video_Video2_idx` (`id_usuario` ASC) VISIBLE,
  INDEX `fk_Usuario_has_Video_Usuario2_idx` (`id_video` ASC) VISIBLE,
  CONSTRAINT `fk_Usuario_has_Video_Usuario2`
    FOREIGN KEY (`id_video`)
    REFERENCES `Youtube`.`Usuario` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Usuario_has_Video_Video2`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `Youtube`.`Video` (`idVideo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
